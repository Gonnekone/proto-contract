syntax = "proto3";

package auth;

option go_package = "gonnekone.sso.v1;ssov1";

import "google/protobuf/empty.proto";
import "google/protobuf/wrappers.proto";

// Auth is service for managing permissions and roles.
service Auth {
  // Register registers a new user.
  rpc RegisterUser (RegisterRequest) returns (RegisterResponse);
  // Login logs in a user and returns an auth token.
  rpc GetNewAccessToken (GetNewAccessTokenRequest) returns (GetNewAccessTokenResponse);
  rpc UpdateUser (UpdateRequest) returns (google.protobuf.Empty);
  rpc DeleteUser (DeleteRequest) returns (google.protobuf.Empty);
  // IsAdmin checks whether a user is an admin.
  rpc IsAdmin (IsAdminRequest) returns (IsAdminResponse);
}

message IsAdminRequest {
  int64 user_id = 1; // User ID to validate.
}

message IsAdminResponse {
  bool is_admin = 1;  // Indicates whether the user is an admin.
}

message RegisterRequest {
  string email = 1; // Email of the user to register.
  string password = 2; // Password of the user to register.
}

message RegisterResponse {
  int64 user_id = 1; // User ID of the registered user.
}

message GetNewAccessTokenRequest {
  string email = 1; // Email of the user to login.
  string password = 2; // Password of the user to login.
  int32 app_id = 3; // ID of the app to login to.
}

message GetNewAccessTokenResponse {
  string token = 1; // Auth token of the logged in user.
}

message UpdateRequest {
  int64 id = 1;
  int32 app_id = 2; // ID of the app to delete from.
  string token = 3;
  google.protobuf.StringValue email = 4;
  google.protobuf.StringValue password = 5;
}

message DeleteRequest {
  int64 user_id = 1; // User ID of the user to delete.
  string token = 3;
}
